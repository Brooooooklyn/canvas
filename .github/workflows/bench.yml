name: Benchmark

env:
  DEBUG: 'napi:*'

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  bench:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Bench
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          check-latest: true

      - name: Install
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          override: true

      - name: Install nasm
        uses: ilammy/setup-nasm@v1

      - name: Generate Cargo.lock
        uses: actions-rs/cargo@v1
        with:
          command: generate-lockfile

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: bench-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: bench-cargo-index

      - name: Cache pnpm store
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: npm-cache-bench-linux-x64-gnu

      - name: Setup pnpm
        run: |
          npm install -g pnpm
          pnpm install --frozen-lockfile

      - name: Download skia binary
        run: node ./scripts/release-skia-binary.js --download

      - name: 'Build'
        run: pnpm build

      - name: 'Run benchmark'
        run: pnpm bench

      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        if: github.ref == 'refs/heads/main'
        with:
          tool: 'benchmarkjs'
          output-file-path: bench.txt
          github-token: ${{ secrets.GH_TOKEN }}
          auto-push: true

      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        continue-on-error: true
        if: github.ref != 'refs/heads/main'
        with:
          tool: 'benchmarkjs'
          output-file-path: bench.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-always: true

      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache
