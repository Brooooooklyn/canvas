name: Benchmark

env:
  DEBUG: 'napi:*'

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  bench:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Bench
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/brooooooklyn/canvas/ubuntu-builder:focal

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: 'yarn'

      - name: Install
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: bench-cargo-cache

      - name: Cache yarn
        uses: actions/cache@v3
        with:
          path: .yarn/cache
          key: bench-yarn-cache-node-16

      - name: Install dependencies
        run: yarn install --immutable

      - name: Download skia binary
        run: |
          git config --global --add safe.directory $(pwd)
          node ./scripts/release-skia-binary.js --download

      - name: 'Build'
        run: yarn build

      - name: 'Run benchmark'
        run: yarn bench

      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        if: github.ref == 'refs/heads/main'
        with:
          tool: 'benchmarkjs'
          output-file-path: bench.txt
          github-token: ${{ secrets.GH_TOKEN }}
          auto-push: true

      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        continue-on-error: true
        if: github.ref != 'refs/heads/main'
        with:
          tool: 'benchmarkjs'
          output-file-path: bench.txt
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-always: true

      - name: Clear the cargo caches
        run: |
          cargo install cargo-cache --no-default-features --features ci-autoclean
          cargo-cache
